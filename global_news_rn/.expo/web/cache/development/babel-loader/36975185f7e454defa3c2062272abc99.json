{"ast":null,"code":"var TYPE_VALUE = 'value';\nvar TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  var cache = new Map();\n\n  var setValue = function setValue(key, value) {return (\n      cache.set(key, { type: TYPE_VALUE, data: value }));};\n\n  var setError = function setError(key, error) {return (\n      cache.set(key, { type: TYPE_ERROR, data: error }));};\n\n  var has = function has(key) {return cache.has(key);};\n\n  var get = function get(key) {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    var _cache$get = cache.get(key),type = _cache$get.type,data = _cache$get.data;\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue: setValue, setError: setError, has: has, get: get };\n}","map":{"version":3,"sources":["D:/workbridge/mProjects/GlobalNewsApp/global_news_rn/node_modules/react-native-vector-icons/lib/create-icon-source-cache.js"],"names":["TYPE_VALUE","TYPE_ERROR","cache","setValue","type","data","setError","has","get"],"mappings":"AAAA,IAAMA,UAAU,GAAhB,OAAA;AACA,IAAMC,UAAU,GAAhB,OAAA;;AAEA,eAAe,SAAA,qBAAA,GAAiC;EAC9C,IAAMC,KAAK,GAAG,IAAd,GAAc,EAAd;;EAEA,IAAMC,QAAQ,GAARA,SAAAA,QAAAA,CAAW,GAAXA,EAAW,KAAXA,EAAW,CAAA;MACfD,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAe,EAAEE,IAAI,EAAN,UAAA,EAAoBC,IAAI,EADxB,KACA,EAAfH,CADe,EAAjB,CAAA;;EAGA,IAAMI,QAAQ,GAARA,SAAAA,QAAAA,CAAW,GAAXA,EAAW,KAAXA,EAAW,CAAA;MACfJ,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAe,EAAEE,IAAI,EAAN,UAAA,EAAoBC,IAAI,EADxB,KACA,EAAfH,CADe,EAAjB,CAAA;;EAGA,IAAMK,GAAG,GAAHA,SAAAA,GAAAA,CAAM,GAANA,EAAS,CAAA,OAAIL,KAAK,CAALA,GAAAA,CAAJ,GAAIA,CAAJ,CAAf,CAAA;;EAEA,IAAMM,GAAG,GAAHA,SAAAA,GAAAA,CAAM,GAANA,EAAa;IACjB,IAAI,CAACN,KAAK,CAALA,GAAAA,CAAL,GAAKA,CAAL,EAAqB;MACnB,OAAA,SAAA;IACD;IACD,IAAA,UAAA,GAAuBA,KAAK,CAALA,GAAAA,CAAvB,GAAuBA,CAAvB,CAAQE,IAAR,GAAA,UAAA,CAAA,IAAA,CAAcC,IAAd,GAAA,UAAA,CAAA,IAAA;IACA,IAAID,IAAI,KAAR,UAAA,EAAyB;MACvB,MAAA,IAAA;IACD;IACD,OAAA,IAAA;EARF,CAAA;;EAWA,OAAO,EAAED,QAAQ,EAAV,QAAA,EAAYG,QAAQ,EAApB,QAAA,EAAsBC,GAAG,EAAzB,GAAA,EAA2BC,GAAG,EAArC,GAAO,EAAP;AACD","sourcesContent":["const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n"]},"metadata":{},"sourceType":"module"}