{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";import _createClass from \"@babel/runtime/helpers/createClass\";import _inherits from \"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";var _excluded = [\"style\", \"iconStyle\", \"children\"];function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = _getPrototypeOf(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return _possibleConstructorReturn(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}import isString from 'lodash.isstring';\nimport omit from 'lodash.omit';\nimport pick from 'lodash.pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from \"./react-native\";\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8 },\n\n  touchable: {\n    overflow: 'hidden' },\n\n  icon: {\n    marginRight: 10 },\n\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent' } });\n\n\n\nvar IOS7_BLUE = '#007AFF';\n\nvar TEXT_PROP_NAMES = [\n'ellipsizeMode',\n'numberOfLines',\n'textBreakStrategy',\n'selectable',\n'suppressHighlighting',\n'allowFontScaling',\n'adjustsFontSizeToFit',\n'minimumFontScale'];\n\n\nvar TOUCHABLE_PROP_NAMES = [\n'accessible',\n'accessibilityLabel',\n'accessibilityHint',\n'accessibilityComponentType',\n'accessibilityRole',\n'accessibilityStates',\n'accessibilityTraits',\n'onFocus',\n'onBlur',\n'disabled',\n'onPress',\n'onPressIn',\n'onPressOut',\n'onLayout',\n'onLongPress',\n'nativeID',\n'testID',\n'delayPressIn',\n'delayPressOut',\n'delayLongPress',\n'activeOpacity',\n'underlayColor',\n'selectionColor',\n'onShowUnderlay',\n'onHideUnderlay',\n'hasTVPreferredFocus',\n'tvParallaxProperties'];\n\n\nexport default function createIconButtonComponent(Icon) {var _class, _temp;\n  return _temp = _class = function (_PureComponent) {_inherits(IconButton, _PureComponent);var _super = _createSuper(IconButton);function IconButton() {_classCallCheck(this, IconButton);return _super.apply(this, arguments);}_createClass(IconButton, [{ key: \"render\", value:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      function render() {\n        var _this$props = this.props,style = _this$props.style,iconStyle = _this$props.iconStyle,children = _this$props.children,restProps = _objectWithoutProperties(_this$props, _excluded);\n\n        var iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color');\n\n        var touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n        var props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor');\n\n        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n        var colorStyle = pick(this.props, 'color');\n        var blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n        return (\n          React.createElement(TouchableHighlight, _extends({\n            style: [styles.touchable, blockStyle] },\n          touchableProps),\n\n          React.createElement(View, _extends({ style: [styles.container, blockStyle, style] }, props),\n          React.createElement(Icon, iconProps),\n          isString(children) ?\n          React.createElement(Text, { style: [styles.text, colorStyle] }, children) :\n\n          children)));\n\n\n\n\n      } }]);return IconButton;}(PureComponent), _class.propTypes = { backgroundColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]), borderRadius: PropTypes.number, color: PropTypes.any, size: PropTypes.number, iconStyle: PropTypes.any, style: PropTypes.any, children: PropTypes.node }, _class.defaultProps = { backgroundColor: IOS7_BLUE, borderRadius: 5, color: 'white', size: 20 }, _temp;\n\n}","map":{"version":3,"sources":["D:/workbridge/mProjects/GlobalNewsApp/global_news_rn/node_modules/react-native-vector-icons/lib/icon-button.js"],"names":["styles","StyleSheet","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","PropTypes","borderRadius","color","size","iconStyle","style","children","restProps","iconProps","pick","touchableProps","props","omit","Object","colorStyle","blockStyle","isString"],"mappings":"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","sourcesContent":["import isString from 'lodash.isstring';\nimport omit from 'lodash.omit';\nimport pick from 'lodash.pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from './react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {isString(children) ? (\n              <Text style={[styles.text, colorStyle]}>{children}</Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}