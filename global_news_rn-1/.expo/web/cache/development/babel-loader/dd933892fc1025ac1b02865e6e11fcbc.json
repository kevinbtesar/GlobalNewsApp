{"ast":null,"code":"\n\n\n\n\nimport createIconSet from \"./lib/create-icon-set\";\nimport glyphMap from \"./glyphmaps/Zocial.json\";\n\nvar iconSet = createIconSet(glyphMap, 'zocial', 'Zocial.ttf');\n\nexport default iconSet;\nvar\nButton =\n\n\niconSet.Button,getImageSource = iconSet.getImageSource,getImageSourceSync = iconSet.getImageSourceSync;export { Button, getImageSource, getImageSourceSync };\n\n;\nvar _a, _b;\n\n\n\nif (typeof self !== 'undefined' &&\n\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n\n\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n\n\n    module.hot.accept();\n\n\n\n    if (prevExports !== null) {\n\n\n\n\n\n\n\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else\n      {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else\n  {\n\n\n\n\n    var isNoLongerABoundary = prevExports !== null;\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["D:/workbridge/mProjects/GlobalNewsApp/global_news_rn/node_modules/react-native-vector-icons/Zocial.js"],"names":["iconSet","createIconSet","Button","getImageSource","getImageSourceSync"],"mappings":";;;;;AAKA,OAAA,aAAA;AACA,OAAA,QAAA;;AAEA,IAAMA,OAAO,GAAGC,aAAa,CAAA,QAAA,EAAA,QAAA,EAA7B,YAA6B,CAA7B;;AAEA,eAAA,OAAA;AACO;AACLC,MADK;;;AAIHF,OAJG,CAAA,MAAA,CAELG,cAFK,GAIHH,OAJG,CAAA,cAAA,CAGLI,kBAHK,GAIHJ,OAJG,CAAA,kBAAA,C","sourcesContent":["/**\n * Zocial icon set component.\n * Usage: <Zocial name=\"icon-name\" size={20} color=\"#4F8EF7\" />\n */\n\nimport createIconSet from './lib/create-icon-set';\nimport glyphMap from './glyphmaps/Zocial.json';\n\nconst iconSet = createIconSet(glyphMap, 'zocial', 'Zocial.ttf');\n\nexport default iconSet;\nexport const {\n  Button,\n  getImageSource,\n  getImageSourceSync,\n} = iconSet;\n"]},"metadata":{},"sourceType":"module"}